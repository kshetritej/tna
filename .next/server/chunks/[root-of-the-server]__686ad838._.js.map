{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/api/admin/posts/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\";\nimport { NextResponse } from \"next/server\";\n\nexport async function GET() {\n  const posts = await prisma.post.findMany({\n    include:{\n      author: {\n        select: {\n          id: true,\n          name: true,\n          email: true\n        }\n      }\n    }\n  });\n  return NextResponse.json(posts, {status: 200})\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,QAAQ,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvC,SAAQ;YACN,QAAQ;gBACN,QAAQ;oBACN,IAAI;oBACJ,MAAM;oBACN,OAAO;gBACT;YACF;QACF;IACF;IACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,OAAO;QAAC,QAAQ;IAAG;AAC9C","debugId":null}}]
}