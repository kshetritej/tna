{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/api/%28auth%29/admin/create-admin/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport prisma from \"@/lib/prisma\";\nimport bcrypt from \"bcryptjs\";\n\nexport async function POST(req: Request) {\n  const body = await req.json()\n\n  const hashedPassword = await bcrypt.hash(body.password, 10)\n\n  const newAdmin = await prisma.admin.create({\n    data: {\n      email: body.email,\n      password: hashedPassword,\n      name: body.name,\n    }\n  })\n\n  return NextResponse.json(newAdmin, { status: 201 })\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,GAAY;IACrC,MAAM,OAAO,MAAM,IAAI,IAAI;IAE3B,MAAM,iBAAiB,MAAM,wLAAA,CAAA,UAAM,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;IAExD,MAAM,WAAW,MAAM,sHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,MAAM,CAAC;QACzC,MAAM;YACJ,OAAO,KAAK,KAAK;YACjB,UAAU;YACV,MAAM,KAAK,IAAI;QACjB;IACF;IAEA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;QAAE,QAAQ;IAAI;AACnD","debugId":null}}]
}