{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/api/dashboard/stats/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\nimport prisma from \"@/lib/prisma\"\n\nexport async function GET() {\n  try {\n    const [userCount, doctorCount, postCount] = await Promise.all([\n      prisma.user.count({\n        where: {\n          isDoctor: false,\n        },\n      }),\n      prisma.user.count({\n        where: {\n          isDoctor: true,\n        },\n      }),\n      prisma.post.count(),\n    ])\n\n    return NextResponse.json({\n      userCount,\n      doctorCount,\n      postCount,\n    })\n  } catch (error) {\n    console.error(\"Error fetching dashboard stats:\", error)\n    return NextResponse.json(\n      { error: \"Failed to fetch dashboard statistics\" },\n      { status: 500 }\n    )\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAC,WAAW,aAAa,UAAU,GAAG,MAAM,QAAQ,GAAG,CAAC;YAC5D,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBAChB,OAAO;oBACL,UAAU;gBACZ;YACF;YACA,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBAChB,OAAO;oBACL,UAAU;gBACZ;YACF;YACA,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,KAAK;SAClB;QAED,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB;YACA;YACA;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuC,GAChD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}