{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/admin/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useRouter } from \"next/navigation\";\nimport { toast } from \"sonner\";\n\nconst AdminLoginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(8),\n})\n\nexport default function AdminLoginPage() {\n  const router = useRouter()\n  const form = useForm<z.infer<typeof AdminLoginSchema>>({\n    resolver: zodResolver(AdminLoginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  })\n\n  const handleAdminLogin = useMutation({\n    mutationFn: async (data: z.infer<typeof AdminLoginSchema>) => {\n      const response = await fetch(\"/api/admin/login\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n      })\n      return response.json()\n    },\n    onSuccess: (data) => {\n      localStorage.setItem(\"token\", data.token)\n      toast.success(\"Login successful\")\n      router.push(\"/admin/dashboard\")\n    },\n    onError: (error: any) => {\n      toast.error(error.message || \"Something went wrong\")\n    }\n  })\n\n  const onSubmit = (data: z.infer<typeof AdminLoginSchema>) => {\n    handleAdminLogin.mutate(data)\n  }\n\n  return (\n    <div>\n      <form onSubmit={form.handleSubmit(onSubmit)}>\n        <Input type=\"email\" placeholder=\"Email\" {...form.register(\"email\")} />\n        <Input type=\"password\" placeholder=\"Password\" {...form.register(\"password\")} />\n        <Button type=\"submit\">Login</Button>\n      </form>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAWA,MAAM,mBAAmB,qLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChC,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;IACvB,UAAU,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;AAC3B;AAEe,SAAS;IACtB,MAAM,SAAS,CAAA,GAAA,iQAAA,CAAA,YAAS,AAAD;IACvB,MAAM,OAAO,CAAA,GAAA,uPAAA,CAAA,UAAO,AAAD,EAAoC;QACrD,UAAU,CAAA,GAAA,+RAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,OAAO;YACP,UAAU;QACZ;IACF;IAEA,MAAM,mBAAmB,CAAA,GAAA,8QAAA,CAAA,cAAW,AAAD,EAAE;QACnC,YAAY,OAAO;YACjB,MAAM,WAAW,MAAM,MAAM,oBAAoB;gBAC/C,QAAQ;gBACR,MAAM,KAAK,SAAS,CAAC;YACvB;YACA,OAAO,SAAS,IAAI;QACtB;QACA,WAAW,CAAC;YACV,aAAa,OAAO,CAAC,SAAS,KAAK,KAAK;YACxC,wQAAA,CAAA,QAAK,CAAC,OAAO,CAAC;YACd,OAAO,IAAI,CAAC;QACd;QACA,SAAS,CAAC;YACR,wQAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM,OAAO,IAAI;QAC/B;IACF;IAEA,MAAM,WAAW,CAAC;QAChB,iBAAiB,MAAM,CAAC;IAC1B;IAEA,qBACE,6WAAC;kBACC,cAAA,6WAAC;YAAK,UAAU,KAAK,YAAY,CAAC;;8BAChC,6WAAC,iIAAA,CAAA,QAAK;oBAAC,MAAK;oBAAQ,aAAY;oBAAS,GAAG,KAAK,QAAQ,CAAC,QAAQ;;;;;;8BAClE,6WAAC,iIAAA,CAAA,QAAK;oBAAC,MAAK;oBAAW,aAAY;oBAAY,GAAG,KAAK,QAAQ,CAAC,WAAW;;;;;;8BAC3E,6WAAC,kIAAA,CAAA,SAAM;oBAAC,MAAK;8BAAS;;;;;;;;;;;;;;;;;AAI9B","debugId":null}}]
}