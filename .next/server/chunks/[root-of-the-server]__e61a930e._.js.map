{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/api/admin/users/%5Bid%5D/route.ts"],"sourcesContent":["//method to delete a user\n\nimport { NextRequest, NextResponse } from \"next/server\";\nimport prisma from \"@/lib/prisma\";\n\ntype Params = Promise<{ id: string }>\nexport async function DELETE(_request: NextRequest, { params }: { params: Params }) {\n  const id = (await params).id;\n  const user = await prisma.user.delete({\n    where: { id: parseInt(id) },\n  });\n\n  if (!user) {\n    return NextResponse.json({ message: \"User not found\" }, { status: 404 });\n  }\n  return NextResponse.json({ message: \"User deleted successfully\" }, { status: 200 });\n}\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;AAEzB;AACA;;;AAGO,eAAe,OAAO,QAAqB,EAAE,EAAE,MAAM,EAAsB;IAChF,MAAM,KAAK,CAAC,MAAM,MAAM,EAAE,EAAE;IAC5B,MAAM,OAAO,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACpC,OAAO;YAAE,IAAI,SAAS;QAAI;IAC5B;IAEA,IAAI,CAAC,MAAM;QACT,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAiB,GAAG;YAAE,QAAQ;QAAI;IACxE;IACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAA4B,GAAG;QAAE,QAAQ;IAAI;AACnF","debugId":null}}]
}