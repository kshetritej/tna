{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/api/%28auth%29/admin/login/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport jwt from \"jsonwebtoken\";\nimport bcrypt from \"bcryptjs\";\n\nexport async function POST(req: NextRequest) {\n  const { email, password } = await req.json()\n  const admin = await prisma.admin.findUnique({\n    where: {\n      email\n    }\n  })\n\n  if (!admin) {\n    return NextResponse.json({ message: \"Admin not found\" }, { status: 404 })\n  }\n\n  const isPasswordValid = await bcrypt.compare(password, admin.password)\n\n  if (!isPasswordValid) {\n    return NextResponse.json({ message: \"Invalid password\" }, { status: 401 })\n  }\n\n  const token = jwt.sign({ id: admin.id, role: admin.role, name: admin.name, email: admin.email }, process.env.JWT_SECRET!, { expiresIn: \"1h\" })\n\n  return NextResponse.json({ message: \"Admin logged in successfully\", token }, { status: 200 })\n}\n\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAgB;IACzC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAC1C,MAAM,QAAQ,MAAM,sHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,UAAU,CAAC;QAC1C,OAAO;YACL;QACF;IACF;IAEA,IAAI,CAAC,OAAO;QACV,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACzE;IAEA,MAAM,kBAAkB,MAAM,wLAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,MAAM,QAAQ;IAErE,IAAI,CAAC,iBAAiB;QACpB,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAmB,GAAG;YAAE,QAAQ;QAAI;IAC1E;IAEA,MAAM,QAAQ,gMAAA,CAAA,UAAG,CAAC,IAAI,CAAC;QAAE,IAAI,MAAM,EAAE;QAAE,MAAM,MAAM,IAAI;QAAE,MAAM,MAAM,IAAI;QAAE,OAAO,MAAM,KAAK;IAAC,GAAG,QAAQ,GAAG,CAAC,UAAU,EAAG;QAAE,WAAW;IAAK;IAE5I,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAgC;IAAM,GAAG;QAAE,QAAQ;IAAI;AAC7F","debugId":null}}]
}