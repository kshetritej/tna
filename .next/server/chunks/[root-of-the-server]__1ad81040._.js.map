{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/api/admin/admins/%5Bid%5D/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\"\nimport bcrypt from \"bcryptjs\"\nimport { NextRequest, NextResponse } from \"next/server\"\n\ntype Params = Promise<{ id: string }>\nexport async function DELETE(_req: NextRequest, { params }: { params: Params }) {\n  const id = (await params).id\n  const admin = await prisma.admin.findUnique({\n    where: { id: parseInt(id) }\n  })\n\n  if (!admin) {\n    return NextResponse.json({ error: \"Admin not found\" }, { status: 404 })\n  }\n\n  const result = await prisma.admin.delete({ where: { id: parseInt(id) } })\n\n  return NextResponse.json({ message: \"Admin deleted successfully\", result })\n}\n\nexport async function PATCH(req: NextRequest, { params }: { params: Params }) {\n  const id = (await params).id\n\n  const { name, email, password } = await req.json()\n\n  const hashedPassword = await bcrypt.hash(password, 10)\n  const admin = await prisma.admin.update({ where: { id: parseInt(id) }, data: { name, email, password: hashedPassword } })\n\n  return NextResponse.json({ message: \"Admin updated successfully\", admin })\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAGO,eAAe,OAAO,IAAiB,EAAE,EAAE,MAAM,EAAsB;IAC5E,MAAM,KAAK,CAAC,MAAM,MAAM,EAAE,EAAE;IAC5B,MAAM,QAAQ,MAAM,sHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,UAAU,CAAC;QAC1C,OAAO;YAAE,IAAI,SAAS;QAAI;IAC5B;IAEA,IAAI,CAAC,OAAO;QACV,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACvE;IAEA,MAAM,SAAS,MAAM,sHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,MAAM,CAAC;QAAE,OAAO;YAAE,IAAI,SAAS;QAAI;IAAE;IAEvE,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAA8B;IAAO;AAC3E;AAEO,eAAe,MAAM,GAAgB,EAAE,EAAE,MAAM,EAAsB;IAC1E,MAAM,KAAK,CAAC,MAAM,MAAM,EAAE,EAAE;IAE5B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;IAEhD,MAAM,iBAAiB,MAAM,wLAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU;IACnD,MAAM,QAAQ,MAAM,sHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,MAAM,CAAC;QAAE,OAAO;YAAE,IAAI,SAAS;QAAI;QAAG,MAAM;YAAE;YAAM;YAAO,UAAU;QAAe;IAAE;IAEvH,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAA8B;IAAM;AAC1E","debugId":null}}]
}