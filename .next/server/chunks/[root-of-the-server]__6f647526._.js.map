{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/api/profile/%5Bid%5D/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\";\nimport { NextRequest, NextResponse } from \"next/server\";\n\ntype Params = Promise<{ id: string }>\nexport async function GET(request: NextRequest, { params }: { params: Params }) {\n  const { id } = await params\n  const user = await prisma.user.findUnique({\n    where: { id: parseInt(id) },\n    select:{\n      id: true,\n      name: true,\n      email: true,\n      phone: true,\n      address: true,\n      avatar: true,\n    }\n  })\n  return NextResponse.json(user)\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,eAAe,IAAI,OAAoB,EAAE,EAAE,MAAM,EAAsB;IAC5E,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM;IACrB,MAAM,OAAO,MAAM,sHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE,IAAI,SAAS;QAAI;QAC1B,QAAO;YACL,IAAI;YACJ,MAAM;YACN,OAAO;YACP,OAAO;YACP,SAAS;YACT,QAAQ;QACV;IACF;IACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}