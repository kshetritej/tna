{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/lib/prisma.ts"],"sourcesContent":["import {PrismaClient} from '@prisma/client';\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === 'production') {\n  prisma = new PrismaClient();\n} else {\n  if (!(global as any).prisma) {\n    (global as any).prisma = new PrismaClient();\n  }\n  prisma = (global as any).prisma;\n}\n\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI;AAEJ,uCAA2C;;AAE3C,OAAO;IACL,IAAI,CAAC,AAAC,OAAe,MAAM,EAAE;QAC1B,OAAe,MAAM,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC3C;IACA,SAAS,AAAC,OAAe,MAAM;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/tj/Documents/aws/mental/src/app/api/appointment/%5BdoctorId%5D/route.ts"],"sourcesContent":["import prisma from \"@/lib/prisma\";\nimport { NextRequest, NextResponse } from \"next/server\";\n\ntype Params = Promise<{ doctorId: string }>\nexport async function GET(request: NextRequest, {params}: { params: Params }) {\n  const { doctorId } = (await params)\n  const appointment = await prisma.appointment.findMany({\n    where: {\n      OR: [\n        { doctorId: parseInt(doctorId) },\n        { patientId: parseInt(doctorId) }\n      ]\n    },\n    include: {\n      patient: {\n        select: {\n          name: true,\n          email: true,\n        },\n      },\n      doctor: {\n        select: {\n          name: true,\n          email: true,\n          qualification: true,\n          experience: true,\n          isVerified: true,\n          isDoctor: true,\n        },\n      },\n    },\n    orderBy:{\n      start: 'desc'\n    }\n  })\n  return NextResponse.json(appointment)\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,eAAe,IAAI,OAAoB,EAAE,EAAC,MAAM,EAAqB;IAC1E,MAAM,EAAE,QAAQ,EAAE,GAAI,MAAM;IAC5B,MAAM,cAAc,MAAM,sHAAA,CAAA,UAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;QACpD,OAAO;YACL,IAAI;gBACF;oBAAE,UAAU,SAAS;gBAAU;gBAC/B;oBAAE,WAAW,SAAS;gBAAU;aACjC;QACH;QACA,SAAS;YACP,SAAS;gBACP,QAAQ;oBACN,MAAM;oBACN,OAAO;gBACT;YACF;YACA,QAAQ;gBACN,QAAQ;oBACN,MAAM;oBACN,OAAO;oBACP,eAAe;oBACf,YAAY;oBACZ,YAAY;oBACZ,UAAU;gBACZ;YACF;QACF;QACA,SAAQ;YACN,OAAO;QACT;IACF;IACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}